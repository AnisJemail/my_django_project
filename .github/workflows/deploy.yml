name: Django CI/CD on Render

on:
  push:
    branches: [ "master" ]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports: ["5431:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_SETTINGS_MODULE: app.settings
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: False
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      DB_HOST: localhost

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12.3

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: pip install --upgrade pip && pip install -r requirements.txt

    - name: Wait for Postgres
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for postgres..."
          sleep 1
        done

    - name: Migrate & Test
      run: |
        python manage.py migrate
        python manage.py test
  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Deploy
        run: curl --retry 5 --retry-delay 10 -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
